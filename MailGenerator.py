from openai import OpenAI
from dotenv import load_dotenv
import os
import tempfile
import subprocess

load_dotenv()
api_key = os.getenv("OPENAI_API_KEY")

client = OpenAI(api_key=api_key)

def check_for_mistakes(email):
    try:
        with tempfile.NamedTemporaryFile(mode='w+', suffix=".txt", delete=False) as temp_file:
            temp_file.write(email)
            temp_file_path = temp_file.name

        command = ["C:\\Program Files\\Microsoft Office\\root\\Office16\\WINWORD.EXE", temp_file_path]
        subprocess.run(command)

        input("Edit the text in VSCode. Press Enter when done...")

        with open(temp_file_path, 'r') as edited_file:
            edited_text = edited_file.read()

        return edited_text

    except Exception as e:
        print(f"An error occurred: {e}")

def generate_email(title, body, attachments):
    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {
                "role": "system",
                "content": "Generate a formal and concise French email body for a university announcement. \n The email should be suitable for either students or teachers, depending on the content.\n Do NOT LEAVE ANY SPACE TO BE FILLED UP since this email will be sent directly. If you NEED them just skip them \n Do not include the subject. DO NOT MAKE UP INFO OR DATES AS IT CAN BE MISLEADING.\n Ensure accuracy in information, and don't leave blank spaces for manual input as the email will be automatically sent. \n Don't mention anything that hints this email was generated by you.\n Leave abbreviation as they are, don't change them or predict their meaning. MAKE SURE TO NOT INTERPRET WHAT ABBREVIATIONS MEAN. if you see any such as \"GI\" or \"IATE\" don't try to explain what they mean.\n The provided details are as follows: Title, Body and Attachments names\n \n the signature should look like this but in French:\n This email was sent by EST Auto Notifier.\n If this email does not concern you, please ignore it.\n \n Thank you,\n \n EST Direction."
            },
            {
                "role": "user",
                "content": f"Title: {title}\nBody: {body}\nAttachements names: {attachments}"
            }
        ],
        temperature=1,
        max_tokens=512,
        top_p=1,
        frequency_penalty=0,
        presence_penalty=0
    )

    generated_email = response.choices[0].message.content.encode('utf-8').decode('utf-8')

    email = check_for_mistakes(generated_email)

    return email

print(generate_email('Hello', 'Hello new students', ''))
